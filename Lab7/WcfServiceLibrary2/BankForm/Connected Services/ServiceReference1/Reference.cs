//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BankForm.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Microsoft.ServiceModel.Samples", ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IService1/Register", ReplyAction="http://Microsoft.ServiceModel.Samples/IService1/RegisterResponse")]
        bool Register(string name, float balance, string pin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IService1/Register", ReplyAction="http://Microsoft.ServiceModel.Samples/IService1/RegisterResponse")]
        System.Threading.Tasks.Task<bool> RegisterAsync(string name, float balance, string pin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IService1/ValidateAccount", ReplyAction="http://Microsoft.ServiceModel.Samples/IService1/ValidateAccountResponse")]
        bool ValidateAccount(int accId, string pin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IService1/ValidateAccount", ReplyAction="http://Microsoft.ServiceModel.Samples/IService1/ValidateAccountResponse")]
        System.Threading.Tasks.Task<bool> ValidateAccountAsync(int accId, string pin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IService1/WithDraw", ReplyAction="http://Microsoft.ServiceModel.Samples/IService1/WithDrawResponse")]
        bool WithDraw(int accId, float amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IService1/WithDraw", ReplyAction="http://Microsoft.ServiceModel.Samples/IService1/WithDrawResponse")]
        System.Threading.Tasks.Task<bool> WithDrawAsync(int accId, float amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IService1/Deposit", ReplyAction="http://Microsoft.ServiceModel.Samples/IService1/DepositResponse")]
        bool Deposit(int accId, float amt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IService1/Deposit", ReplyAction="http://Microsoft.ServiceModel.Samples/IService1/DepositResponse")]
        System.Threading.Tasks.Task<bool> DepositAsync(int accId, float amt);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : BankForm.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<BankForm.ServiceReference1.IService1>, BankForm.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Register(string name, float balance, string pin) {
            return base.Channel.Register(name, balance, pin);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterAsync(string name, float balance, string pin) {
            return base.Channel.RegisterAsync(name, balance, pin);
        }
        
        public bool ValidateAccount(int accId, string pin) {
            return base.Channel.ValidateAccount(accId, pin);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateAccountAsync(int accId, string pin) {
            return base.Channel.ValidateAccountAsync(accId, pin);
        }
        
        public bool WithDraw(int accId, float amount) {
            return base.Channel.WithDraw(accId, amount);
        }
        
        public System.Threading.Tasks.Task<bool> WithDrawAsync(int accId, float amount) {
            return base.Channel.WithDrawAsync(accId, amount);
        }
        
        public bool Deposit(int accId, float amt) {
            return base.Channel.Deposit(accId, amt);
        }
        
        public System.Threading.Tasks.Task<bool> DepositAsync(int accId, float amt) {
            return base.Channel.DepositAsync(accId, amt);
        }
    }
}
